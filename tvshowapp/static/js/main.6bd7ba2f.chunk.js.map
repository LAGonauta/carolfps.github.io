{"version":3,"sources":["components/EpisodeImg.js","components/EpisodeInfo.js","components/EpisodeTitle.js","components/Episode.js","components/EpisodeList.js","components/Sidebar.js","components/BottomContainer.js","App.js","index.js"],"names":["episodeImg","props","className","srcSet","image","type","episodeInfo","synopsis","episodeTitle","onClick","e","handler","episodeNumber","title","src","alt","episode","state","collapsed","this","setState","EpisodeTitle","toggle","EpisodeImg","EpisodeInfo","Component","episodeList","episodes","map","Episode","Image","Title","EpisodeNumber","Synopsis","seasonNumber","SeasonNumber","sidebar","selectedSeason","season","focusclass","toggleSeason","EpisodeList","episodeData","filter","bottomContainer","options","actions","imgsrc","text","selectedOption","option","action","showData","Cast","actor","Name","join","selectOption","renderInfo","App","getData","url","a","axios","response","data","errorMsg","getSeasons","Set","show","loaded","episodeDataUrl","episodeFiltered","el","seasons","style","background","Images","Background","Year","length","Sidebar","BottomContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bd7ba2f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst episodeImg = (props) => {\r\n    return(\r\n        <div className=\"episode-img\">\r\n            <img srcSet={props.image} type=\"image/webp\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default episodeImg;","import React from 'react';\r\n\r\nconst episodeInfo = (props) => {\r\n    return(\r\n        <div className=\"episode-info\">\r\n            {props.synopsis}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default episodeInfo;","import React from 'react';\r\n\r\nconst episodeTitle = (props) => {\r\n    return(\r\n        <div className=\"episode-headline\" onClick={(e) => props.handler()}>\r\n            <div className=\"episode-title\">\r\n                {props.episodeNumber} {props.title}\r\n            </div>\r\n            <div className=\"episode-play\">\r\n                <img src=\"./images/play-small-player-w.svg\" alt=\"Play\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default episodeTitle;","import React, {Component} from 'react';\r\nimport EpisodeImg from './EpisodeImg';\r\nimport EpisodeInfo from './EpisodeInfo';\r\nimport EpisodeTitle from './EpisodeTitle';\r\n\r\nclass episode extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { collapsed: true}\r\n    }\r\n    toggle() {\r\n        this.setState({ collapsed: !this.state.collapsed });\r\n    };\r\n    render(){\r\n        return(\r\n            <div className='episode'>\r\n                <EpisodeTitle title={this.props.title} episodeNumber={this.props.episodeNumber} handler={(e) => this.toggle()}/>\r\n                {!this.state.collapsed && <div>\r\n                    <EpisodeImg image={this.props.image}/>\r\n                    <EpisodeInfo synopsis={this.props.synopsis}/>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default episode;","import React from 'react';\r\nimport Episode from './Episode';\r\n\r\nconst episodeList = (props) => {\r\n    return(\r\n        <div className=\"episode-list\">\r\n            {props.episodes.map( (episode) => {\r\n                return(\r\n                    <Episode \r\n                        key={`ep_${episode.Title}`}\r\n                        image={episode.Image} \r\n                        title={episode.Title} \r\n                        episodeNumber={episode.EpisodeNumber}\r\n                        synopsis={episode.Synopsis} \r\n                        seasonNumber={episode.SeasonNumber}\r\n                    />\r\n                )})}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default episodeList;","import React, {Component} from 'react';\r\nimport EpisodeList from './EpisodeList';\r\n\r\nclass sidebar extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedSeason: this.props.seasonNumber[0]\r\n        };\r\n    }\r\n    toggleSeason(season){\r\n        this.setState({\r\n            selectedSeason: season\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"side-bar\">\r\n                <div className=\"close-search\">\r\n                    <img src=\"./images/close-search-w.svg\" alt=\"Close\" />\r\n                </div>\r\n                <div className=\"seasons\">\r\n                    {this.props.seasonNumber.map( (season) => {\r\n                        const focusclass = this.state.selectedSeason === season? 'season-focus':'';\r\n                        return(\r\n                            <button key={`${season}_season`} className={`season ${focusclass}`} onClick={(e)=>{this.toggleSeason(season)}}>T{season}</button>                        \r\n                        )\r\n                    } )}\r\n                </div>\r\n                {this.props.seasonNumber.map( (season) => {\r\n                    return(\r\n                        season === this.state.selectedSeason ? \r\n                            <EpisodeList key={`${season}_ep`} episodes={this.props.episodeData.filter(episode => episode.SeasonNumber === season)}/> : ''                    \r\n                    )\r\n                } )}\r\n                \r\n            </div>\r\n        )}\r\n}\r\n\r\nexport default sidebar;","import React, {Component} from 'react';\r\n\r\nclass bottomContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            options: ['GENERAL', 'ELENCO', 'PRINCIPALES PREMIOS'],\r\n            actions:[\r\n                { imgsrc:'./images/add-gray-s.svg', text:'Mi lista', alt:'Add to list'},\r\n                { imgsrc:'./images/sad-gray-w.svg', text:'Evaluar', alt:'Evaluate'},\r\n                { imgsrc:'./images/rec-gray-s.svg', text:'Grabar', alt:'Record'},\r\n                { imgsrc:'./images/share-gray-s.svg', text:'Compartir', alt:'Share'},\r\n            ],\r\n            selectedOption: 'GENERAL',\r\n        }\r\n    }\r\n    selectOption(option){\r\n        this.setState({\r\n            selectedOption: option\r\n        })\r\n    }\r\n    renderInfo(option){\r\n        if (option === this.state.options[0]){\r\n            return (\r\n                <div className=\"general-info\">\r\n                    <div className=\"actions\">\r\n                        {this.state.actions.map( (action) => {\r\n                            return(\r\n                                <div key={`generalinfo_${action.alt}`} className=\"action\">\r\n                                    <img className=\"action-img\" src={action.imgsrc} alt={action.alt} />\r\n                                    <div className=\"action-text\">{action.text}</div>\r\n                                </div>\r\n                            )\r\n                        } )}\r\n                    </div>\r\n                    <div className=\"synopsis\">\r\n                        <div className=\"synopsis-title\">SINOPSE</div>\r\n                        <div className=\"synopsis-text\">{this.props.showData.Synopsis}</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (option === this.state.options[1]){\r\n            return(\r\n                <div className=\"cast-info\">\r\n                    <div className=\"cast\">{this.props.showData.Cast.map(actor => actor.Name).join(', ')}</div>\r\n                </div>\r\n            )\r\n        } else if (option === this.state.options[2]){\r\n            return(\r\n                <div className=\"awards-info\">\r\n                    <div className=\"awards\">Sem informação disponível.</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"bottom-container\">\r\n                <div className=\"bottom-options\">\r\n                    {this.state.options.map( (option) => { \r\n                        const focusclass = this.state.selectedOption === option? 'option-focus':'';\r\n                        return(\r\n                            <button key={`${option}_button`} className={`option ${focusclass}`} onClick={(e)=>{this.selectOption(option)}}>{option}</button>\r\n                        )\r\n                        })}\r\n                    <img src=\"./images/logo-telecine.svg\" className=\"logo\"></img>\r\n                </div>\r\n                {this.renderInfo(this.state.selectedOption)}     \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default bottomContainer;","import Sidebar from './components/Sidebar';\r\nimport BottomContainer from './components/BottomContainer';\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: {},\r\n      episodes: {},\r\n      seasonNumber: {},\r\n      errorMsg: '',\r\n      loaded: false,\r\n    };  \r\n    }\r\n  getData = async (url) => {\r\n    try{\r\n      const response = await axios(url);\r\n      if (!response.data){\r\n        this.setState({errorMsg: ('Erro na busca de dados 😭')});\r\n      }\r\n      return response.data;\r\n    } catch(err){\r\n      this.setState({errorMsg: ('Erro na busca de dados 😭')});\r\n    }\r\n  }\r\n  getSeasons = episodeData => {    \r\n    return [...new Set(episodeData.map(episode => episode.SeasonNumber))];\r\n  }\r\n  async componentDidMount(){\r\n    const showDataUrl = 'https://sample-api-78c77.firebaseio.com/tv-shows/SHOW123.json';\r\n    const episodeDataUrl = 'https://sample-api-78c77.firebaseio.com/episodes/SHOW123.json';\r\n    const showData = await this.getData(showDataUrl);\r\n    const episodeData = await this.getData(episodeDataUrl);\r\n    if(showData && episodeData){\r\n      var episodeFiltered = episodeData.filter(function (el) {\r\n        return el != null;\r\n      });\r\n      const seasons = this.getSeasons(episodeFiltered);\r\n      this.setState({\r\n        show: showData,\r\n        episodes: episodeFiltered,\r\n        seasonNumber: seasons,\r\n        loaded: true\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      (this.state.errorMsg !== '') ?\r\n      (<div className=\"error-pg\"><h1>{this.state.errorMsg}</h1></div>) : this.state.loaded ?\r\n        (<div className=\"container\" style={{background: `url(${this.state.show.Images.Background}) no-repeat center center fixed`}}>\r\n          <div className=\"series-title\">\r\n            <h1>{this.state.show.Title}</h1>\r\n            <h2>80% INDICADO / CIENCIA FICCIÓN / {this.state.show.Year} / EUA / 14</h2>\r\n          </div>\r\n          {this.state.episodes.length > 0 && <Sidebar episodeData={this.state.episodes} seasonNumber={this.state.seasonNumber}/>}\r\n          <BottomContainer showData={this.state.show}/>\r\n        </div>) : ''\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}