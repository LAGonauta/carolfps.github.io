{"version":3,"sources":["images/logo-telecine.svg","components/EpisodeImg.js","components/EpisodeInfo.js","images/play-small-player-w.svg","components/EpisodeTitle.js","components/Episode.js","components/EpisodeList.js","images/close-search-w.svg","components/Sidebar.js","images/add-gray-s.svg","images/sad-gray-w.svg","images/rec-gray-s.svg","images/share-gray-s.svg","components/BottomContainer.js","App.js","index.js"],"names":["episodeImg","props","className","srcSet","image","type","episodeInfo","synopsis","episodeTitle","onClick","e","handler","episodeNumber","title","src","playerImg","alt","episode","state","collapsed","this","setState","EpisodeTitle","toggle","EpisodeImg","EpisodeInfo","Component","episodeList","episodes","map","Episode","Image","Title","EpisodeNumber","Synopsis","seasonNumber","SeasonNumber","sidebar","selectedSeason","season","closeImg","focusclass","toggleSeason","EpisodeList","episodeData","filter","bottomContainer","options","actions","imgsrc","addImg","text","sadImg","recImg","shareImg","selectedOption","option","action","showData","Cast","actor","Name","join","selectOption","require","renderInfo","App","getData","url","a","axios","response","data","errorMsg","getSeasons","Set","show","loaded","episodeDataUrl","episodeFiltered","el","seasons","style","background","Images","Background","Year","length","Sidebar","BottomContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d42f2e01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-telecine.8881d65e.svg\";","import React from 'react';\r\n\r\nconst episodeImg = (props) => {\r\n    return(\r\n        <div className=\"episode-img\">\r\n            <img srcSet={props.image} type=\"image/webp\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default episodeImg;","import React from 'react';\r\n\r\nconst episodeInfo = (props) => {\r\n    return(\r\n        <div className=\"episode-info\">\r\n            {props.synopsis}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default episodeInfo;","export default __webpack_public_path__ + \"static/media/play-small-player-w.aba38ffc.svg\";","import React from 'react';\r\nimport playerImg from '../images/play-small-player-w.svg';\r\n\r\nconst episodeTitle = (props) => {\r\n    return(\r\n        <div className=\"episode-headline\" onClick={(e) => props.handler()}>\r\n            <div className=\"episode-title\">\r\n                {props.episodeNumber} {props.title}\r\n            </div>\r\n            <div className=\"episode-play\">\r\n                <img src={playerImg} alt=\"Play\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default episodeTitle;","import React, {Component} from 'react';\r\nimport EpisodeImg from './EpisodeImg';\r\nimport EpisodeInfo from './EpisodeInfo';\r\nimport EpisodeTitle from './EpisodeTitle';\r\n\r\nclass episode extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { collapsed: true}\r\n    }\r\n    toggle() {\r\n        this.setState({ collapsed: !this.state.collapsed });\r\n    };\r\n    render(){\r\n        return(\r\n            <div className='episode'>\r\n                <EpisodeTitle title={this.props.title} episodeNumber={this.props.episodeNumber} handler={(e) => this.toggle()}/>\r\n                {!this.state.collapsed && <div>\r\n                    <EpisodeImg image={this.props.image}/>\r\n                    <EpisodeInfo synopsis={this.props.synopsis}/>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default episode;","import React from 'react';\r\nimport Episode from './Episode';\r\n\r\nconst episodeList = (props) => {\r\n    return(\r\n        <div className=\"episode-list\">\r\n            {props.episodes.map( (episode) => {\r\n                return(\r\n                    <Episode \r\n                        key={`ep_${episode.Title}`}\r\n                        image={episode.Image} \r\n                        title={episode.Title} \r\n                        episodeNumber={episode.EpisodeNumber}\r\n                        synopsis={episode.Synopsis} \r\n                        seasonNumber={episode.SeasonNumber}\r\n                    />\r\n                )})}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default episodeList;","export default __webpack_public_path__ + \"static/media/close-search-w.68b0bd52.svg\";","import React, {Component} from 'react';\r\nimport EpisodeList from './EpisodeList';\r\nimport closeImg from '../images/close-search-w.svg';\r\n\r\nclass sidebar extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedSeason: this.props.seasonNumber[0]\r\n        };\r\n    }\r\n    toggleSeason(season){\r\n        this.setState({\r\n            selectedSeason: season\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"side-bar\">\r\n                <div className=\"close-search\">\r\n                    <img src={closeImg} alt=\"Close\" />\r\n                </div>\r\n                <div className=\"seasons\">\r\n                    {this.props.seasonNumber.map( (season) => {\r\n                        const focusclass = this.state.selectedSeason === season? 'season-focus':'';\r\n                        return(\r\n                            <button key={`${season}_season`} className={`season ${focusclass}`} onClick={(e)=>{this.toggleSeason(season)}}>T{season}</button>                        \r\n                        )\r\n                    } )}\r\n                </div>\r\n                {this.props.seasonNumber.map( (season) => {\r\n                    return(\r\n                        season === this.state.selectedSeason ? \r\n                            <EpisodeList key={`${season}_ep`} episodes={this.props.episodeData.filter(episode => episode.SeasonNumber === season)}/> : ''                    \r\n                    )\r\n                } )}\r\n                \r\n            </div>\r\n        )}\r\n}\r\n\r\nexport default sidebar;","export default __webpack_public_path__ + \"static/media/add-gray-s.6edcfa0e.svg\";","export default __webpack_public_path__ + \"static/media/sad-gray-w.74d55914.svg\";","export default __webpack_public_path__ + \"static/media/rec-gray-s.07096c22.svg\";","export default __webpack_public_path__ + \"static/media/share-gray-s.5a69a61c.svg\";","import React, {Component} from 'react';\r\nimport addImg from '../images/add-gray-s.svg';\r\nimport sadImg from '../images/sad-gray-w.svg';\r\nimport recImg from '../images/rec-gray-s.svg';\r\nimport shareImg from '../images/share-gray-s.svg';\r\n\r\nclass bottomContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            options: ['GENERAL', 'ELENCO', 'PRINCIPALES PREMIOS'],\r\n            actions:[\r\n                { imgsrc:addImg, text:'Mi lista', alt:'Add to list'},\r\n                { imgsrc:sadImg, text:'Evaluar', alt:'Evaluate'},\r\n                { imgsrc:recImg, text:'Grabar', alt:'Record'},\r\n                { imgsrc:shareImg, text:'Compartir', alt:'Share'},\r\n            ],\r\n            selectedOption: 'GENERAL',\r\n        }\r\n    }\r\n    selectOption(option){\r\n        this.setState({\r\n            selectedOption: option\r\n        })\r\n    }\r\n    renderInfo(option){\r\n        if (option === this.state.options[0]){\r\n            return (\r\n                <div className=\"general-info\">\r\n                    <div className=\"actions\">\r\n                        {this.state.actions.map( (action) => {\r\n                            return(\r\n                                <div key={`generalinfo_${action.alt}`} className=\"action\">\r\n                                    <img className=\"action-img\" src={action.imgsrc} alt={action.alt} />\r\n                                    <div className=\"action-text\">{action.text}</div>\r\n                                </div>\r\n                            )\r\n                        } )}\r\n                    </div>\r\n                    <div className=\"synopsis\">\r\n                        <div className=\"synopsis-title\">SINOPSE</div>\r\n                        <div className=\"synopsis-text\">{this.props.showData.Synopsis}</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (option === this.state.options[1]){\r\n            return(\r\n                <div className=\"cast-info\">\r\n                    <div className=\"cast\">{this.props.showData.Cast.map(actor => actor.Name).join(', ')}</div>\r\n                </div>\r\n            )\r\n        } else if (option === this.state.options[2]){\r\n            return(\r\n                <div className=\"awards-info\">\r\n                    <div className=\"awards\">Sem informação disponível.</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"bottom-container\">\r\n                <div className=\"bottom-options\">\r\n                    {this.state.options.map( (option) => { \r\n                        const focusclass = this.state.selectedOption === option? 'option-focus':'';\r\n                        return(\r\n                            <button key={`${option}_button`} className={`option ${focusclass}`} onClick={(e)=>{this.selectOption(option)}}>{option}</button>\r\n                        )\r\n                        })}\r\n                    <img src={require('../images/logo-telecine.svg')} className=\"logo\"></img>\r\n                </div>\r\n                {this.renderInfo(this.state.selectedOption)}     \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default bottomContainer;","import Sidebar from './components/Sidebar';\r\nimport BottomContainer from './components/BottomContainer';\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: {},\r\n      episodes: {},\r\n      seasonNumber: {},\r\n      errorMsg: '',\r\n      loaded: false,\r\n    };  \r\n    }\r\n  getData = async (url) => {\r\n    try{\r\n      const response = await axios(url);\r\n      if (!response.data){\r\n        this.setState({errorMsg: ('Erro na busca de dados 😭')});\r\n      }\r\n      return response.data;\r\n    } catch(err){\r\n      this.setState({errorMsg: ('Erro na busca de dados 😭')});\r\n    }\r\n  }\r\n  getSeasons = episodeData => {    \r\n    return [...new Set(episodeData.map(episode => episode.SeasonNumber))];\r\n  }\r\n  async componentDidMount(){\r\n    const showDataUrl = 'https://sample-api-78c77.firebaseio.com/tv-shows/SHOW123.json';\r\n    const episodeDataUrl = 'https://sample-api-78c77.firebaseio.com/episodes/SHOW123.json';\r\n    const showData = await this.getData(showDataUrl);\r\n    const episodeData = await this.getData(episodeDataUrl);\r\n    if(showData && episodeData){\r\n      var episodeFiltered = episodeData.filter(function (el) {\r\n        return el != null;\r\n      });\r\n      const seasons = this.getSeasons(episodeFiltered);\r\n      this.setState({\r\n        show: showData,\r\n        episodes: episodeFiltered,\r\n        seasonNumber: seasons,\r\n        loaded: true\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      (this.state.errorMsg !== '') ?\r\n      (<div className=\"error-pg\"><h1>{this.state.errorMsg}</h1></div>) : this.state.loaded ?\r\n        (<div className=\"container\" style={{background: `url(${this.state.show.Images.Background}) no-repeat center center fixed`}}>\r\n          <div className=\"series-title\">\r\n            <h1>{this.state.show.Title}</h1>\r\n            <h2>80% INDICADO / CIENCIA FICCIÓN / {this.state.show.Year} / EUA / 14</h2>\r\n          </div>\r\n          {this.state.episodes.length > 0 && <Sidebar episodeData={this.state.episodes} seasonNumber={this.state.seasonNumber}/>}\r\n          <BottomContainer showData={this.state.show}/>\r\n        </div>) : ''\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}